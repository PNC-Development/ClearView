//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace NCC.ClearView.Application.Core.AltirisWS_Computer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ComputerManagementServiceSoap", Namespace="http://Altiris.ASDK.DS.com")]
    public partial class ComputerManagementService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private DSCredentialsHeader dSCredentialsHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetComputerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVirtualComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddBasicVirtualComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComputerInfoByAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComputerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveComputerByGroupNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveComputerByAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteComputerByAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComputerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesByAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComputerSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameComputerByAttributeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComputerIDsInGroupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ComputerManagementService() {
            this.Url = global::NCC.ClearView.Application.Core.Properties.Settings.Default.NCBClass_AltirisWS_Computer_ComputerManagementService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public DSCredentialsHeader DSCredentialsHeaderValue {
            get {
                return this.dSCredentialsHeaderValueField;
            }
            set {
                this.dSCredentialsHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetComputerIDCompletedEventHandler GetComputerIDCompleted;
        
        /// <remarks/>
        public event AddVirtualComputerCompletedEventHandler AddVirtualComputerCompleted;
        
        /// <remarks/>
        public event AddBasicVirtualComputerCompletedEventHandler AddBasicVirtualComputerCompleted;
        
        /// <remarks/>
        public event GetComputerInfoByAttributeCompletedEventHandler GetComputerInfoByAttributeCompleted;
        
        /// <remarks/>
        public event GetComputerInfoCompletedEventHandler GetComputerInfoCompleted;
        
        /// <remarks/>
        public event MoveComputerByGroupNameCompletedEventHandler MoveComputerByGroupNameCompleted;
        
        /// <remarks/>
        public event MoveComputerByAttributeCompletedEventHandler MoveComputerByAttributeCompleted;
        
        /// <remarks/>
        public event MoveComputerCompletedEventHandler MoveComputerCompleted;
        
        /// <remarks/>
        public event DeleteComputerByAttributeCompletedEventHandler DeleteComputerByAttributeCompleted;
        
        /// <remarks/>
        public event DeleteComputerCompletedEventHandler DeleteComputerCompleted;
        
        /// <remarks/>
        public event GetComputerListCompletedEventHandler GetComputerListCompleted;
        
        /// <remarks/>
        public event GetSchedulesByAttributeCompletedEventHandler GetSchedulesByAttributeCompleted;
        
        /// <remarks/>
        public event GetComputerSchedulesCompletedEventHandler GetComputerSchedulesCompleted;
        
        /// <remarks/>
        public event RenameComputerByAttributeCompletedEventHandler RenameComputerByAttributeCompleted;
        
        /// <remarks/>
        public event RenameComputerCompletedEventHandler RenameComputerCompleted;
        
        /// <remarks/>
        public event GetComputerIDsInGroupCompletedEventHandler GetComputerIDsInGroupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetComputerID", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetComputerID(string computerSearchPhrase, int computerSearchType) {
            object[] results = this.Invoke("GetComputerID", new object[] {
                        computerSearchPhrase,
                        computerSearchType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerIDAsync(string computerSearchPhrase, int computerSearchType) {
            this.GetComputerIDAsync(computerSearchPhrase, computerSearchType, null);
        }
        
        /// <remarks/>
        public void GetComputerIDAsync(string computerSearchPhrase, int computerSearchType, object userState) {
            if ((this.GetComputerIDOperationCompleted == null)) {
                this.GetComputerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerIDOperationCompleted);
            }
            this.InvokeAsync("GetComputerID", new object[] {
                        computerSearchPhrase,
                        computerSearchType}, this.GetComputerIDOperationCompleted, userState);
        }
        
        private void OnGetComputerIDOperationCompleted(object arg) {
            if ((this.GetComputerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerIDCompleted(this, new GetComputerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/AddVirtualComputer", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddVirtualComputer(
                    int groupID, 
                    string computerName, 
                    string assetTag, 
                    string serialNumber, 
                    string macAddress, 
                    int domainMembership, 
                    string domain, 
                    string preferredServer, 
                    string preferredTree, 
                    string ndsContext, 
                    string userName, 
                    bool loginToTree, 
                    bool runScripts, 
                    string osUser, 
                    string osOrganization, 
                    string osKey) {
            object[] results = this.Invoke("AddVirtualComputer", new object[] {
                        groupID,
                        computerName,
                        assetTag,
                        serialNumber,
                        macAddress,
                        domainMembership,
                        domain,
                        preferredServer,
                        preferredTree,
                        ndsContext,
                        userName,
                        loginToTree,
                        runScripts,
                        osUser,
                        osOrganization,
                        osKey});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddVirtualComputerAsync(
                    int groupID, 
                    string computerName, 
                    string assetTag, 
                    string serialNumber, 
                    string macAddress, 
                    int domainMembership, 
                    string domain, 
                    string preferredServer, 
                    string preferredTree, 
                    string ndsContext, 
                    string userName, 
                    bool loginToTree, 
                    bool runScripts, 
                    string osUser, 
                    string osOrganization, 
                    string osKey) {
            this.AddVirtualComputerAsync(groupID, computerName, assetTag, serialNumber, macAddress, domainMembership, domain, preferredServer, preferredTree, ndsContext, userName, loginToTree, runScripts, osUser, osOrganization, osKey, null);
        }
        
        /// <remarks/>
        public void AddVirtualComputerAsync(
                    int groupID, 
                    string computerName, 
                    string assetTag, 
                    string serialNumber, 
                    string macAddress, 
                    int domainMembership, 
                    string domain, 
                    string preferredServer, 
                    string preferredTree, 
                    string ndsContext, 
                    string userName, 
                    bool loginToTree, 
                    bool runScripts, 
                    string osUser, 
                    string osOrganization, 
                    string osKey, 
                    object userState) {
            if ((this.AddVirtualComputerOperationCompleted == null)) {
                this.AddVirtualComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVirtualComputerOperationCompleted);
            }
            this.InvokeAsync("AddVirtualComputer", new object[] {
                        groupID,
                        computerName,
                        assetTag,
                        serialNumber,
                        macAddress,
                        domainMembership,
                        domain,
                        preferredServer,
                        preferredTree,
                        ndsContext,
                        userName,
                        loginToTree,
                        runScripts,
                        osUser,
                        osOrganization,
                        osKey}, this.AddVirtualComputerOperationCompleted, userState);
        }
        
        private void OnAddVirtualComputerOperationCompleted(object arg) {
            if ((this.AddVirtualComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVirtualComputerCompleted(this, new AddVirtualComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/AddBasicVirtualComputer", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddBasicVirtualComputer(int groupID, string computerName, string assetTag, string serialNumber, string macAddress, int domainMembership, string domain) {
            object[] results = this.Invoke("AddBasicVirtualComputer", new object[] {
                        groupID,
                        computerName,
                        assetTag,
                        serialNumber,
                        macAddress,
                        domainMembership,
                        domain});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddBasicVirtualComputerAsync(int groupID, string computerName, string assetTag, string serialNumber, string macAddress, int domainMembership, string domain) {
            this.AddBasicVirtualComputerAsync(groupID, computerName, assetTag, serialNumber, macAddress, domainMembership, domain, null);
        }
        
        /// <remarks/>
        public void AddBasicVirtualComputerAsync(int groupID, string computerName, string assetTag, string serialNumber, string macAddress, int domainMembership, string domain, object userState) {
            if ((this.AddBasicVirtualComputerOperationCompleted == null)) {
                this.AddBasicVirtualComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddBasicVirtualComputerOperationCompleted);
            }
            this.InvokeAsync("AddBasicVirtualComputer", new object[] {
                        groupID,
                        computerName,
                        assetTag,
                        serialNumber,
                        macAddress,
                        domainMembership,
                        domain}, this.AddBasicVirtualComputerOperationCompleted, userState);
        }
        
        private void OnAddBasicVirtualComputerOperationCompleted(object arg) {
            if ((this.AddBasicVirtualComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddBasicVirtualComputerCompleted(this, new AddBasicVirtualComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetComputerInfoByAttribute", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComputerInfoByAttribute(string computerSearchPhrase, int computerSearchType, int filterType) {
            object[] results = this.Invoke("GetComputerInfoByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        filterType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerInfoByAttributeAsync(string computerSearchPhrase, int computerSearchType, int filterType) {
            this.GetComputerInfoByAttributeAsync(computerSearchPhrase, computerSearchType, filterType, null);
        }
        
        /// <remarks/>
        public void GetComputerInfoByAttributeAsync(string computerSearchPhrase, int computerSearchType, int filterType, object userState) {
            if ((this.GetComputerInfoByAttributeOperationCompleted == null)) {
                this.GetComputerInfoByAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerInfoByAttributeOperationCompleted);
            }
            this.InvokeAsync("GetComputerInfoByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        filterType}, this.GetComputerInfoByAttributeOperationCompleted, userState);
        }
        
        private void OnGetComputerInfoByAttributeOperationCompleted(object arg) {
            if ((this.GetComputerInfoByAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerInfoByAttributeCompleted(this, new GetComputerInfoByAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetComputerInfo", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComputerInfo(int computerID, int filterType) {
            object[] results = this.Invoke("GetComputerInfo", new object[] {
                        computerID,
                        filterType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerInfoAsync(int computerID, int filterType) {
            this.GetComputerInfoAsync(computerID, filterType, null);
        }
        
        /// <remarks/>
        public void GetComputerInfoAsync(int computerID, int filterType, object userState) {
            if ((this.GetComputerInfoOperationCompleted == null)) {
                this.GetComputerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerInfoOperationCompleted);
            }
            this.InvokeAsync("GetComputerInfo", new object[] {
                        computerID,
                        filterType}, this.GetComputerInfoOperationCompleted, userState);
        }
        
        private void OnGetComputerInfoOperationCompleted(object arg) {
            if ((this.GetComputerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerInfoCompleted(this, new GetComputerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/MoveComputerByGroupName", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveComputerByGroupName(string computerSearchPhrase, int computerSearchType, string groupSearchPhrase) {
            object[] results = this.Invoke("MoveComputerByGroupName", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        groupSearchPhrase});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveComputerByGroupNameAsync(string computerSearchPhrase, int computerSearchType, string groupSearchPhrase) {
            this.MoveComputerByGroupNameAsync(computerSearchPhrase, computerSearchType, groupSearchPhrase, null);
        }
        
        /// <remarks/>
        public void MoveComputerByGroupNameAsync(string computerSearchPhrase, int computerSearchType, string groupSearchPhrase, object userState) {
            if ((this.MoveComputerByGroupNameOperationCompleted == null)) {
                this.MoveComputerByGroupNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveComputerByGroupNameOperationCompleted);
            }
            this.InvokeAsync("MoveComputerByGroupName", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        groupSearchPhrase}, this.MoveComputerByGroupNameOperationCompleted, userState);
        }
        
        private void OnMoveComputerByGroupNameOperationCompleted(object arg) {
            if ((this.MoveComputerByGroupNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveComputerByGroupNameCompleted(this, new MoveComputerByGroupNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/MoveComputerByAttribute", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveComputerByAttribute(string computerSearchPhrase, int computerSearchType, int groupID) {
            object[] results = this.Invoke("MoveComputerByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        groupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveComputerByAttributeAsync(string computerSearchPhrase, int computerSearchType, int groupID) {
            this.MoveComputerByAttributeAsync(computerSearchPhrase, computerSearchType, groupID, null);
        }
        
        /// <remarks/>
        public void MoveComputerByAttributeAsync(string computerSearchPhrase, int computerSearchType, int groupID, object userState) {
            if ((this.MoveComputerByAttributeOperationCompleted == null)) {
                this.MoveComputerByAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveComputerByAttributeOperationCompleted);
            }
            this.InvokeAsync("MoveComputerByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        groupID}, this.MoveComputerByAttributeOperationCompleted, userState);
        }
        
        private void OnMoveComputerByAttributeOperationCompleted(object arg) {
            if ((this.MoveComputerByAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveComputerByAttributeCompleted(this, new MoveComputerByAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/MoveComputer", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool MoveComputer(int computerID, int groupID) {
            object[] results = this.Invoke("MoveComputer", new object[] {
                        computerID,
                        groupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MoveComputerAsync(int computerID, int groupID) {
            this.MoveComputerAsync(computerID, groupID, null);
        }
        
        /// <remarks/>
        public void MoveComputerAsync(int computerID, int groupID, object userState) {
            if ((this.MoveComputerOperationCompleted == null)) {
                this.MoveComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveComputerOperationCompleted);
            }
            this.InvokeAsync("MoveComputer", new object[] {
                        computerID,
                        groupID}, this.MoveComputerOperationCompleted, userState);
        }
        
        private void OnMoveComputerOperationCompleted(object arg) {
            if ((this.MoveComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveComputerCompleted(this, new MoveComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/DeleteComputerByAttribute", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteComputerByAttribute(string computerSearchPhrase, int computerSearchType) {
            object[] results = this.Invoke("DeleteComputerByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteComputerByAttributeAsync(string computerSearchPhrase, int computerSearchType) {
            this.DeleteComputerByAttributeAsync(computerSearchPhrase, computerSearchType, null);
        }
        
        /// <remarks/>
        public void DeleteComputerByAttributeAsync(string computerSearchPhrase, int computerSearchType, object userState) {
            if ((this.DeleteComputerByAttributeOperationCompleted == null)) {
                this.DeleteComputerByAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteComputerByAttributeOperationCompleted);
            }
            this.InvokeAsync("DeleteComputerByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType}, this.DeleteComputerByAttributeOperationCompleted, userState);
        }
        
        private void OnDeleteComputerByAttributeOperationCompleted(object arg) {
            if ((this.DeleteComputerByAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteComputerByAttributeCompleted(this, new DeleteComputerByAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/DeleteComputer", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteComputer(int computerID) {
            object[] results = this.Invoke("DeleteComputer", new object[] {
                        computerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteComputerAsync(int computerID) {
            this.DeleteComputerAsync(computerID, null);
        }
        
        /// <remarks/>
        public void DeleteComputerAsync(int computerID, object userState) {
            if ((this.DeleteComputerOperationCompleted == null)) {
                this.DeleteComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteComputerOperationCompleted);
            }
            this.InvokeAsync("DeleteComputer", new object[] {
                        computerID}, this.DeleteComputerOperationCompleted, userState);
        }
        
        private void OnDeleteComputerOperationCompleted(object arg) {
            if ((this.DeleteComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteComputerCompleted(this, new DeleteComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetComputerList", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetComputerList(string computerSearchPhrase) {
            object[] results = this.Invoke("GetComputerList", new object[] {
                        computerSearchPhrase});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerListAsync(string computerSearchPhrase) {
            this.GetComputerListAsync(computerSearchPhrase, null);
        }
        
        /// <remarks/>
        public void GetComputerListAsync(string computerSearchPhrase, object userState) {
            if ((this.GetComputerListOperationCompleted == null)) {
                this.GetComputerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerListOperationCompleted);
            }
            this.InvokeAsync("GetComputerList", new object[] {
                        computerSearchPhrase}, this.GetComputerListOperationCompleted, userState);
        }
        
        private void OnGetComputerListOperationCompleted(object arg) {
            if ((this.GetComputerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerListCompleted(this, new GetComputerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetSchedulesByAttribute", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSchedulesByAttribute(string computerSearchPhrase, int computerSearchType) {
            object[] results = this.Invoke("GetSchedulesByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesByAttributeAsync(string computerSearchPhrase, int computerSearchType) {
            this.GetSchedulesByAttributeAsync(computerSearchPhrase, computerSearchType, null);
        }
        
        /// <remarks/>
        public void GetSchedulesByAttributeAsync(string computerSearchPhrase, int computerSearchType, object userState) {
            if ((this.GetSchedulesByAttributeOperationCompleted == null)) {
                this.GetSchedulesByAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesByAttributeOperationCompleted);
            }
            this.InvokeAsync("GetSchedulesByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType}, this.GetSchedulesByAttributeOperationCompleted, userState);
        }
        
        private void OnGetSchedulesByAttributeOperationCompleted(object arg) {
            if ((this.GetSchedulesByAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesByAttributeCompleted(this, new GetSchedulesByAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetComputerSchedules", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetComputerSchedules(int computerID) {
            object[] results = this.Invoke("GetComputerSchedules", new object[] {
                        computerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerSchedulesAsync(int computerID) {
            this.GetComputerSchedulesAsync(computerID, null);
        }
        
        /// <remarks/>
        public void GetComputerSchedulesAsync(int computerID, object userState) {
            if ((this.GetComputerSchedulesOperationCompleted == null)) {
                this.GetComputerSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetComputerSchedules", new object[] {
                        computerID}, this.GetComputerSchedulesOperationCompleted, userState);
        }
        
        private void OnGetComputerSchedulesOperationCompleted(object arg) {
            if ((this.GetComputerSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerSchedulesCompleted(this, new GetComputerSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/RenameComputerByAttribute", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RenameComputerByAttribute(string computerSearchPhrase, int computerSearchType, string computerName) {
            object[] results = this.Invoke("RenameComputerByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        computerName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RenameComputerByAttributeAsync(string computerSearchPhrase, int computerSearchType, string computerName) {
            this.RenameComputerByAttributeAsync(computerSearchPhrase, computerSearchType, computerName, null);
        }
        
        /// <remarks/>
        public void RenameComputerByAttributeAsync(string computerSearchPhrase, int computerSearchType, string computerName, object userState) {
            if ((this.RenameComputerByAttributeOperationCompleted == null)) {
                this.RenameComputerByAttributeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameComputerByAttributeOperationCompleted);
            }
            this.InvokeAsync("RenameComputerByAttribute", new object[] {
                        computerSearchPhrase,
                        computerSearchType,
                        computerName}, this.RenameComputerByAttributeOperationCompleted, userState);
        }
        
        private void OnRenameComputerByAttributeOperationCompleted(object arg) {
            if ((this.RenameComputerByAttributeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameComputerByAttributeCompleted(this, new RenameComputerByAttributeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/RenameComputer", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RenameComputer(int computerID, string computerName) {
            object[] results = this.Invoke("RenameComputer", new object[] {
                        computerID,
                        computerName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RenameComputerAsync(int computerID, string computerName) {
            this.RenameComputerAsync(computerID, computerName, null);
        }
        
        /// <remarks/>
        public void RenameComputerAsync(int computerID, string computerName, object userState) {
            if ((this.RenameComputerOperationCompleted == null)) {
                this.RenameComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameComputerOperationCompleted);
            }
            this.InvokeAsync("RenameComputer", new object[] {
                        computerID,
                        computerName}, this.RenameComputerOperationCompleted, userState);
        }
        
        private void OnRenameComputerOperationCompleted(object arg) {
            if ((this.RenameComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameComputerCompleted(this, new RenameComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("DSCredentialsHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Altiris.ASDK.DS.com/GetComputerIDsInGroup", RequestNamespace="http://Altiris.ASDK.DS.com", ResponseNamespace="http://Altiris.ASDK.DS.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetComputerIDsInGroup(int groupID) {
            object[] results = this.Invoke("GetComputerIDsInGroup", new object[] {
                        groupID});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetComputerIDsInGroupAsync(int groupID) {
            this.GetComputerIDsInGroupAsync(groupID, null);
        }
        
        /// <remarks/>
        public void GetComputerIDsInGroupAsync(int groupID, object userState) {
            if ((this.GetComputerIDsInGroupOperationCompleted == null)) {
                this.GetComputerIDsInGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComputerIDsInGroupOperationCompleted);
            }
            this.InvokeAsync("GetComputerIDsInGroup", new object[] {
                        groupID}, this.GetComputerIDsInGroupOperationCompleted, userState);
        }
        
        private void OnGetComputerIDsInGroupOperationCompleted(object arg) {
            if ((this.GetComputerIDsInGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComputerIDsInGroupCompleted(this, new GetComputerIDsInGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Altiris.ASDK.DS.com")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://Altiris.ASDK.DS.com", IsNullable=false)]
    public partial class DSCredentialsHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private string domainField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetComputerIDCompletedEventHandler(object sender, GetComputerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddVirtualComputerCompletedEventHandler(object sender, AddVirtualComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVirtualComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVirtualComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void AddBasicVirtualComputerCompletedEventHandler(object sender, AddBasicVirtualComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddBasicVirtualComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddBasicVirtualComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetComputerInfoByAttributeCompletedEventHandler(object sender, GetComputerInfoByAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerInfoByAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerInfoByAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetComputerInfoCompletedEventHandler(object sender, GetComputerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MoveComputerByGroupNameCompletedEventHandler(object sender, MoveComputerByGroupNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveComputerByGroupNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveComputerByGroupNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MoveComputerByAttributeCompletedEventHandler(object sender, MoveComputerByAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveComputerByAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveComputerByAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MoveComputerCompletedEventHandler(object sender, MoveComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteComputerByAttributeCompletedEventHandler(object sender, DeleteComputerByAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteComputerByAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteComputerByAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteComputerCompletedEventHandler(object sender, DeleteComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetComputerListCompletedEventHandler(object sender, GetComputerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSchedulesByAttributeCompletedEventHandler(object sender, GetSchedulesByAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesByAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesByAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetComputerSchedulesCompletedEventHandler(object sender, GetComputerSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RenameComputerByAttributeCompletedEventHandler(object sender, RenameComputerByAttributeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameComputerByAttributeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameComputerByAttributeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RenameComputerCompletedEventHandler(object sender, RenameComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetComputerIDsInGroupCompletedEventHandler(object sender, GetComputerIDsInGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComputerIDsInGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComputerIDsInGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591