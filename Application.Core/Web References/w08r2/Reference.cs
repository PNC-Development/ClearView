//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace NCC.ClearView.Application.Core.w08r2 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BuildSubmitSoap", Namespace="http://tempuri.org/")]
    public partial class BuildSubmit : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback automatedBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback addBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForceCleanupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckADForComputerOperationCompleted;
        
        private System.Threading.SendOrPostCallback automatedBuild2OperationCompleted;
        
        private System.Threading.SendOrPostCallback addBuild2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BuildSubmit() {
            this.Url = global::NCC.ClearView.Application.Core.Properties.Settings.Default.NCC_ClearView_Application_Core_w08r2_BuildSubmit;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event automatedBuildCompletedEventHandler automatedBuildCompleted;
        
        /// <remarks/>
        public event addBuildCompletedEventHandler addBuildCompleted;
        
        /// <remarks/>
        public event ForceCleanupCompletedEventHandler ForceCleanupCompleted;
        
        /// <remarks/>
        public event CleanupCompletedEventHandler CleanupCompleted;
        
        /// <remarks/>
        public event CheckADForComputerCompletedEventHandler CheckADForComputerCompleted;
        
        /// <remarks/>
        public event automatedBuild2CompletedEventHandler automatedBuild2Completed;
        
        /// <remarks/>
        public event addBuild2CompletedEventHandler addBuild2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/automatedBuild", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string automatedBuild(string ComputerName, string MACAddress, string OStoInstall, string BuildType, string DomainToJoin, string TaskSequence, string BackupSoftware, string BuildDatabase, string IISInstall, string ESMInstall, string clearviewInstall) {
            object[] results = this.Invoke("automatedBuild", new object[] {
                        ComputerName,
                        MACAddress,
                        OStoInstall,
                        BuildType,
                        DomainToJoin,
                        TaskSequence,
                        BackupSoftware,
                        BuildDatabase,
                        IISInstall,
                        ESMInstall,
                        clearviewInstall});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void automatedBuildAsync(string ComputerName, string MACAddress, string OStoInstall, string BuildType, string DomainToJoin, string TaskSequence, string BackupSoftware, string BuildDatabase, string IISInstall, string ESMInstall, string clearviewInstall) {
            this.automatedBuildAsync(ComputerName, MACAddress, OStoInstall, BuildType, DomainToJoin, TaskSequence, BackupSoftware, BuildDatabase, IISInstall, ESMInstall, clearviewInstall, null);
        }
        
        /// <remarks/>
        public void automatedBuildAsync(string ComputerName, string MACAddress, string OStoInstall, string BuildType, string DomainToJoin, string TaskSequence, string BackupSoftware, string BuildDatabase, string IISInstall, string ESMInstall, string clearviewInstall, object userState) {
            if ((this.automatedBuildOperationCompleted == null)) {
                this.automatedBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnautomatedBuildOperationCompleted);
            }
            this.InvokeAsync("automatedBuild", new object[] {
                        ComputerName,
                        MACAddress,
                        OStoInstall,
                        BuildType,
                        DomainToJoin,
                        TaskSequence,
                        BackupSoftware,
                        BuildDatabase,
                        IISInstall,
                        ESMInstall,
                        clearviewInstall}, this.automatedBuildOperationCompleted, userState);
        }
        
        private void OnautomatedBuildOperationCompleted(object arg) {
            if ((this.automatedBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.automatedBuildCompleted(this, new automatedBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addBuild", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addBuild(string ComputerName, string MACAddress, string DomainToJoin, string TaskSequence, string BackupSoftware, string BuildDatabase, string IISInstall, string ESMInstall, string clearviewInstall) {
            object[] results = this.Invoke("addBuild", new object[] {
                        ComputerName,
                        MACAddress,
                        DomainToJoin,
                        TaskSequence,
                        BackupSoftware,
                        BuildDatabase,
                        IISInstall,
                        ESMInstall,
                        clearviewInstall});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addBuildAsync(string ComputerName, string MACAddress, string DomainToJoin, string TaskSequence, string BackupSoftware, string BuildDatabase, string IISInstall, string ESMInstall, string clearviewInstall) {
            this.addBuildAsync(ComputerName, MACAddress, DomainToJoin, TaskSequence, BackupSoftware, BuildDatabase, IISInstall, ESMInstall, clearviewInstall, null);
        }
        
        /// <remarks/>
        public void addBuildAsync(string ComputerName, string MACAddress, string DomainToJoin, string TaskSequence, string BackupSoftware, string BuildDatabase, string IISInstall, string ESMInstall, string clearviewInstall, object userState) {
            if ((this.addBuildOperationCompleted == null)) {
                this.addBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBuildOperationCompleted);
            }
            this.InvokeAsync("addBuild", new object[] {
                        ComputerName,
                        MACAddress,
                        DomainToJoin,
                        TaskSequence,
                        BackupSoftware,
                        BuildDatabase,
                        IISInstall,
                        ESMInstall,
                        clearviewInstall}, this.addBuildOperationCompleted, userState);
        }
        
        private void OnaddBuildOperationCompleted(object arg) {
            if ((this.addBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBuildCompleted(this, new addBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForceCleanup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object ForceCleanup(string ComputerName, string MACAddress, string buildDatabase) {
            object[] results = this.Invoke("ForceCleanup", new object[] {
                        ComputerName,
                        MACAddress,
                        buildDatabase});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void ForceCleanupAsync(string ComputerName, string MACAddress, string buildDatabase) {
            this.ForceCleanupAsync(ComputerName, MACAddress, buildDatabase, null);
        }
        
        /// <remarks/>
        public void ForceCleanupAsync(string ComputerName, string MACAddress, string buildDatabase, object userState) {
            if ((this.ForceCleanupOperationCompleted == null)) {
                this.ForceCleanupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForceCleanupOperationCompleted);
            }
            this.InvokeAsync("ForceCleanup", new object[] {
                        ComputerName,
                        MACAddress,
                        buildDatabase}, this.ForceCleanupOperationCompleted, userState);
        }
        
        private void OnForceCleanupOperationCompleted(object arg) {
            if ((this.ForceCleanupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForceCleanupCompleted(this, new ForceCleanupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cleanup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object Cleanup(string ComputerName, string MACAddress, string buildDatabase) {
            object[] results = this.Invoke("Cleanup", new object[] {
                        ComputerName,
                        MACAddress,
                        buildDatabase});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CleanupAsync(string ComputerName, string MACAddress, string buildDatabase) {
            this.CleanupAsync(ComputerName, MACAddress, buildDatabase, null);
        }
        
        /// <remarks/>
        public void CleanupAsync(string ComputerName, string MACAddress, string buildDatabase, object userState) {
            if ((this.CleanupOperationCompleted == null)) {
                this.CleanupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanupOperationCompleted);
            }
            this.InvokeAsync("Cleanup", new object[] {
                        ComputerName,
                        MACAddress,
                        buildDatabase}, this.CleanupOperationCompleted, userState);
        }
        
        private void OnCleanupOperationCompleted(object arg) {
            if ((this.CleanupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanupCompleted(this, new CleanupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckADForComputer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckADForComputer(string DomainToQuery, string ComputertoCheck, string extendedFunctions) {
            object[] results = this.Invoke("CheckADForComputer", new object[] {
                        DomainToQuery,
                        ComputertoCheck,
                        extendedFunctions});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckADForComputerAsync(string DomainToQuery, string ComputertoCheck, string extendedFunctions) {
            this.CheckADForComputerAsync(DomainToQuery, ComputertoCheck, extendedFunctions, null);
        }
        
        /// <remarks/>
        public void CheckADForComputerAsync(string DomainToQuery, string ComputertoCheck, string extendedFunctions, object userState) {
            if ((this.CheckADForComputerOperationCompleted == null)) {
                this.CheckADForComputerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckADForComputerOperationCompleted);
            }
            this.InvokeAsync("CheckADForComputer", new object[] {
                        DomainToQuery,
                        ComputertoCheck,
                        extendedFunctions}, this.CheckADForComputerOperationCompleted, userState);
        }
        
        private void OnCheckADForComputerOperationCompleted(object arg) {
            if ((this.CheckADForComputerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckADForComputerCompleted(this, new CheckADForComputerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/automatedBuild2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string automatedBuild2(string ComputerName, string MACAddress, string OStoInstall, string BuildType, string DomainToJoin, string TaskSequence, string BuildDatabase, string[] extendedValues) {
            object[] results = this.Invoke("automatedBuild2", new object[] {
                        ComputerName,
                        MACAddress,
                        OStoInstall,
                        BuildType,
                        DomainToJoin,
                        TaskSequence,
                        BuildDatabase,
                        extendedValues});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void automatedBuild2Async(string ComputerName, string MACAddress, string OStoInstall, string BuildType, string DomainToJoin, string TaskSequence, string BuildDatabase, string[] extendedValues) {
            this.automatedBuild2Async(ComputerName, MACAddress, OStoInstall, BuildType, DomainToJoin, TaskSequence, BuildDatabase, extendedValues, null);
        }
        
        /// <remarks/>
        public void automatedBuild2Async(string ComputerName, string MACAddress, string OStoInstall, string BuildType, string DomainToJoin, string TaskSequence, string BuildDatabase, string[] extendedValues, object userState) {
            if ((this.automatedBuild2OperationCompleted == null)) {
                this.automatedBuild2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnautomatedBuild2OperationCompleted);
            }
            this.InvokeAsync("automatedBuild2", new object[] {
                        ComputerName,
                        MACAddress,
                        OStoInstall,
                        BuildType,
                        DomainToJoin,
                        TaskSequence,
                        BuildDatabase,
                        extendedValues}, this.automatedBuild2OperationCompleted, userState);
        }
        
        private void OnautomatedBuild2OperationCompleted(object arg) {
            if ((this.automatedBuild2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.automatedBuild2Completed(this, new automatedBuild2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addBuild2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addBuild2(string ComputerName, string MACAddress, string DomainToJoin, string TaskSequence, string BuildDatabase, string[] extendedValues) {
            object[] results = this.Invoke("addBuild2", new object[] {
                        ComputerName,
                        MACAddress,
                        DomainToJoin,
                        TaskSequence,
                        BuildDatabase,
                        extendedValues});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addBuild2Async(string ComputerName, string MACAddress, string DomainToJoin, string TaskSequence, string BuildDatabase, string[] extendedValues) {
            this.addBuild2Async(ComputerName, MACAddress, DomainToJoin, TaskSequence, BuildDatabase, extendedValues, null);
        }
        
        /// <remarks/>
        public void addBuild2Async(string ComputerName, string MACAddress, string DomainToJoin, string TaskSequence, string BuildDatabase, string[] extendedValues, object userState) {
            if ((this.addBuild2OperationCompleted == null)) {
                this.addBuild2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddBuild2OperationCompleted);
            }
            this.InvokeAsync("addBuild2", new object[] {
                        ComputerName,
                        MACAddress,
                        DomainToJoin,
                        TaskSequence,
                        BuildDatabase,
                        extendedValues}, this.addBuild2OperationCompleted, userState);
        }
        
        private void OnaddBuild2OperationCompleted(object arg) {
            if ((this.addBuild2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addBuild2Completed(this, new addBuild2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void automatedBuildCompletedEventHandler(object sender, automatedBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class automatedBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal automatedBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void addBuildCompletedEventHandler(object sender, addBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ForceCleanupCompletedEventHandler(object sender, ForceCleanupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForceCleanupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForceCleanupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CleanupCompletedEventHandler(object sender, CleanupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckADForComputerCompletedEventHandler(object sender, CheckADForComputerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckADForComputerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckADForComputerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void automatedBuild2CompletedEventHandler(object sender, automatedBuild2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class automatedBuild2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal automatedBuild2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void addBuild2CompletedEventHandler(object sender, addBuild2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addBuild2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addBuild2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591