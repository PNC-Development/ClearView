<%@ Control Language="C#" %>
<script runat="server">
    private string dsn = ConfigurationManager.ConnectionStrings[ConfigurationManager.AppSettings["DSN"]].ConnectionString;
    private string dsnAsset = ConfigurationManager.ConnectionStrings[ConfigurationManager.AppSettings["AssetDSN"]].ConnectionString;
    private string dsnIP = ConfigurationManager.ConnectionStrings[ConfigurationManager.AppSettings["IpDSN"]].ConnectionString;
    private string dsnZeus = ConfigurationManager.ConnectionStrings[ConfigurationManager.AppSettings["ZeusDSN"]].ConnectionString;
    private string dsnServiceEditor = ConfigurationManager.ConnectionStrings[ConfigurationManager.AppSettings["ServiceEditorDSN"]].ConnectionString;
    private int intEnvironment = Int32.Parse(ConfigurationManager.AppSettings["Environment"]);
    private string strVirtual = ConfigurationManager.AppSettings["VirtualGatekeeper"];
    private int intAssignPage = Int32.Parse(ConfigurationManager.AppSettings["AssignWorkload"]);
    private int intViewPage = Int32.Parse(ConfigurationManager.AppSettings["ViewWorkload"]);
    private int intResourceRequestApprove = Int32.Parse(ConfigurationManager.AppSettings["ResourceRequestApprove"]);
    private int intMyWork = Int32.Parse(ConfigurationManager.AppSettings["MyWork"]);
    private int intImplementorDistributed = Int32.Parse(ConfigurationManager.AppSettings["ITEMID_IMPLEMENTOR_DISTRIBUTED"]);
    private int intImplementorMidrange = Int32.Parse(ConfigurationManager.AppSettings["ITEMID_IMPLEMENTOR_MIDRANGE"]);
    private int intStorageItem = Int32.Parse(ConfigurationManager.AppSettings["ITEMID_STORAGE"]);
    private int intBackupItem = Int32.Parse(ConfigurationManager.AppSettings["ITEMID_BACKUP"]);
    private int intStorageService = Int32.Parse(ConfigurationManager.AppSettings["SERVICEID_STORAGE"]);
    private int intBackupService = Int32.Parse(ConfigurationManager.AppSettings["SERVICEID_BACKUP"]);
    private int intWorkstationPlatform = Int32.Parse(ConfigurationManager.AppSettings["WorkstationPlatformID"]);
    private string strEmail = ConfigurationManager.AppSettings["TSM_MAILBOX"];
    private int intUnder48A = Int32.Parse(ConfigurationManager.AppSettings["DR_HOUR_RESPONSE"]);
    private int intUnder48Q = Int32.Parse(ConfigurationManager.AppSettings["DR_HOUR_QUESTION"]);
    private string strHA = ConfigurationManager.AppSettings["FORECAST_HIGH_AVAILABILITY"];
    private string strBCC = ConfigurationManager.AppSettings["WorkflowBCC"];
    private bool boolUsePNCNaming = (ConfigurationManager.AppSettings["USE_PNC_NAMING"] == "1");
    private int intProfile;
    private Projects oProject;
    private Functions oFunction;
    private Users oUser;
    private Pages oPage;
    private ResourceRequest oResourceRequest;
    private RequestItems oRequestItem;
    private Requests oRequest;
    private Services oService;
    private RequestFields oRequestField;
    private Applications oApplication;
    private OnDemandTasks oOnDemandTasks;
    private Delegates oDelegate;
    private Forecast oForecast;
    private Servers oServer;
    private Storage oStorage;
    private ModelsProperties oModelsProperties;
    private Classes oClass;
    private int intApplication = 0;
    private int intPage = 0;
    private int intProject = 0;
    private bool boolDetails = false;
    private bool boolExecution = false;
    private int intRequest = 0;
    private int intItem = 0;
    private int intNumber = 0;
    private ServiceRequests oServiceRequest;
    private int intWorkloadPage = Int32.Parse(ConfigurationManager.AppSettings["ViewWorkload"]);
    private bool boolMove = false;
    private double dblSteps = 7.00;
    private double dblTotalHours = 6.00;
    private string strDetails = "";
    private string strExecution = "";
    private void Page_Load()
    {
        intProfile = Int32.Parse(Request.Cookies["profileid"].Value);
        oProject = new Projects(intProfile, dsn);
        oFunction = new Functions(intProfile, dsn, intEnvironment);
        oUser = new Users(intProfile, dsn);
        oPage = new Pages(intProfile, dsn);
        oResourceRequest = new ResourceRequest(intProfile, dsn);
        oRequestItem = new RequestItems(intProfile, dsn);
        oRequest = new Requests(intProfile, dsn);
        oService = new Services(intProfile, dsn);
        oRequestField = new RequestFields(intProfile, dsn);
        oServiceRequest = new ServiceRequests(intProfile, dsn);
        oApplication = new Applications(intProfile, dsn);
        oOnDemandTasks = new OnDemandTasks(intProfile, dsn);
        oDelegate = new Delegates(intProfile, dsn);
        oForecast = new Forecast(intProfile, dsn);
        oServer = new Servers(0, dsn);
        oStorage = new Storage(intProfile, dsn);
        oModelsProperties = new ModelsProperties(intProfile, dsn);
        oClass = new Classes(intProfile, dsn);
        if (Request.QueryString["applicationid"] != null && Request.QueryString["applicationid"] != "")
            intApplication = Int32.Parse(Request.QueryString["applicationid"]);
        if (Request.QueryString["pageid"] != null && Request.QueryString["pageid"] != "")
            intPage = Int32.Parse(Request.QueryString["pageid"]);
        if (Request.Cookies["application"] != null && Request.Cookies["application"].Value != "")
            intApplication = Int32.Parse(Request.Cookies["application"].Value);
        if (Request.QueryString["rrid"] != null && Request.QueryString["rrid"] != "")
        {
            lblRequest.Text = Request.QueryString["rrid"];
            int intResource = Int32.Parse(Request.QueryString["rrid"]);
            DataSet ds = oResourceRequest.Get(intResource);
            intRequest = Int32.Parse(ds.Tables[0].Rows[0]["requestid"].ToString());
            intItem = Int32.Parse(ds.Tables[0].Rows[0]["itemid"].ToString());
            intNumber = Int32.Parse(ds.Tables[0].Rows[0]["number"].ToString());
            bool boolComplete = (ds.Tables[0].Rows[0]["status"].ToString() == "3");
            int intJoined = Int32.Parse(ds.Tables[0].Rows[0]["joined"].ToString());
            int intService = Int32.Parse(ds.Tables[0].Rows[0]["serviceid"].ToString());
            lblService.Text = oService.Get(intService, "name");
            txtCustom.Text = ds.Tables[0].Rows[0]["name"].ToString();
            int intUser = Int32.Parse(ds.Tables[0].Rows[0]["userid"].ToString());
            int intApp = oRequestItem.GetItemApplication(intItem);
            if (intProfile == intUser || oService.IsManager(intService, intProfile) || oDelegate.Get(intUser, intProfile) > 0 || (oApplication.IsManager(intApp, intProfile) && oApplication.Get(intApp, "disable_manager") != "1") || (oUser.IsManager(intUser, intProfile, true) && oApplication.Get(intApp, "disable_manager") != "1"))
            {
                double dblAllocated = double.Parse(ds.Tables[0].Rows[0]["allocated"].ToString());
                double dblUsed = oResourceRequest.GetUsed(intResource);
                lblUpdated.Text = oResourceRequest.GetUpdated(intResource);
                dblUsed = (dblUsed / dblAllocated) * 100;
                if (Request.QueryString["save"] != null && Request.QueryString["save"] != "")
                    Page.ClientScript.RegisterClientScriptBlock(typeof(Page), "saved", "<script type=\"text/javascript\">alert('Information Saved Successfully');<" + "/" + "script>");
                if (Request.QueryString["status"] != null && Request.QueryString["status"] != "")
                    Page.ClientScript.RegisterClientScriptBlock(typeof(Page), "statusd", "<script type=\"text/javascript\">alert('Weekly Status has been Added');<" + "/" + "script>");
                intProject = oRequest.GetProjectNumber(intRequest);
                hdnTab.Value = "D";
                panWorkload.Visible = true;
                bool boolDone = LoadProject(intResource);
                if (boolDone == true)
                {
                    if (boolComplete == false)
                    {
                        oFunction.ConfigureToolButton(btnComplete, "/images/tool_complete");
                        btnComplete.Attributes.Add("onclick", "return confirm('Are you sure you want to mark this as completed and remove it from your workload?');");
                    }
                    else
                    {
                        oFunction.ConfigureToolButton(btnComplete, "/images/tool_complete");
                        btnComplete.Attributes.Add("onclick", "alert('This task has already been marked COMPLETE. You can close this window.');return false;");
                    }
                    imgSuccess.ImageUrl = "/images/green_arrow.gif";
                    btnSave.ImageUrl = "/images/tool_save.gif";
                    btnSave.Enabled = false;
                }
                else
                {
                    btnComplete.ImageUrl = "/images/tool_complete_dbl.gif";
                    btnComplete.Enabled = false;
                    oFunction.ConfigureToolButton(btnSave, "/images/tool_save");
                }
            }
            else
                panDenied.Visible = true;
        }
        else
            panDenied.Visible = true;
        btnDenied.Attributes.Add("onclick", "return CloseWindow();");
        oFunction.ConfigureToolButton(btnSave, "/images/tool_save");
        oFunction.ConfigureToolButton(btnPrint, "/images/tool_print");
        btnPrint.Attributes.Add("onclick", "return PrintWindow();");
        oFunction.ConfigureToolButton(btnClose, "/images/tool_close");
        btnClose.Attributes.Add("onclick", "return ExitWindow();");
        imgProduction.Attributes.Add("onclick", "return ShowCalendar('" + txtProduction.ClientID + "');");
    }
    private bool LoadProject(int _request)
    {
        if (intProject > 0)
        {
            lblName.Text = oProject.Get(intProject, "name");
            lblNumber.Text = oProject.Get(intProject, "number");
            lblType.Text = "Project";
        }
        else
        {
            lblName.Text = oResourceRequest.GetWorkflow(_request, "name");
            lblNumber.Text = "CVT" + intRequest.ToString();
            lblType.Text = "Task";
        }
        bool boolDone = false;
        DataSet ds = oOnDemandTasks.GetII(intRequest, intItem, intNumber);
        if (ds.Tables[0].Rows.Count > 0)
        {
            int intAnswer = Int32.Parse(ds.Tables[0].Rows[0]["answerid"].ToString());
            lblAnswer.Text = intAnswer.ToString();
            int intStep = Int32.Parse(ds.Tables[0].Rows[0]["step"].ToString());
            lblStep.Text = intStep.ToString();
            lblView.Text = oOnDemandTasks.GetBody(intAnswer, intImplementorDistributed, intImplementorMidrange);
            int intModel = Int32.Parse(ds.Tables[0].Rows[0]["modelid"].ToString());
            intModel = Int32.Parse(oModelsProperties.Get(intModel, "modelid"));
            Models oModel = new Models(intProfile, dsn);
            int intType = Int32.Parse(oModel.Get(intModel, "typeid"));
            Types oType = new Types(intProfile, dsn);
            strDetails += "<tr><td nowrap colspan=\"2\"><img src=\"/images/user.gif\" border=\"0\" align=\"absmiddle\"/> <a href=\"javascript:void(0);\" onclick=\"OpenWindow('NEW_WINDOW','/frame/ondemand/ondemand_server.aspx?id=" + intAnswer.ToString() + "&sid=2&view=true');\">Click here to view the user configuration</a></td></tr>";
            if (oForecast.IsHACluster(intAnswer) == true)
                strDetails += "<tr><td nowrap colspan=\"2\"><img src=\"/images/config.gif\" border=\"0\" align=\"absmiddle\"/> <a href=\"javascript:void(0);\" onclick=\"OpenWindow('NEW_WINDOW','/frame/ondemand/ondemand_server.aspx?id=" + intAnswer.ToString() + "&sid=5&view=true');\">Click here to view the device configuration</a></td></tr>";
            else
                strDetails += "<tr><td nowrap colspan=\"2\"><img src=\"/images/config.gif\" border=\"0\" align=\"absmiddle\"/> <a href=\"javascript:void(0);\" onclick=\"OpenWindow('NEW_WINDOW','/frame/ondemand/ondemand_server.aspx?id=" + intAnswer.ToString() + "&sid=3&view=true');\">Click here to view the device configuration</a></td></tr>";
            string strExecute = oType.Get(intType, "forecast_execution_path");
            if (strExecute != "")
                strDetails += "<tr><td nowrap colspan=\"2\"><img src=\"/images/check.gif\" border=\"0\" align=\"absmiddle\"/> <a href=\"javascript:void(0);\" onclick=\"OpenWindow('FORECAST_EXECUTE','" + strExecute + "?id=" + intAnswer.ToString() + "');\">Click here to view the execution</a></td></tr>";
            int intClass = Int32.Parse(oForecast.GetAnswer(intAnswer, "classid"));
            int intEnv = Int32.Parse(oForecast.GetAnswer(intAnswer, "environmentid"));
            bool boolProduction = true;
            lblProduction.Text = "1";
            if (oClass.Get(intClass, "prod") != "1")
            {
                boolProduction = false;
                lblProduction.Text = "0";
                panProduction.Visible = false;
            }
            txtProduction.Enabled = false;
            imgProduction.Enabled = false;
            // Step 1: Execute
            string strStep1 = "";
            if (intStep > 1)
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div1');\">Execute Request</a></td>";
                strExecution += "</tr>";
                DataSet dsAnswer = oServer.GetAnswer(intAnswer);
                foreach (DataRow drAnswer in dsAnswer.Tables[0].Rows)
                {
                    if (strStep1 != "")
                        strStep1 += "<br/>";
                    int intServerName = Int32.Parse(drAnswer["nameid"].ToString());
                    ServerName oServerName = new ServerName(0, dsn);
                    strStep1 += "Server Name: " + oservername.getname2(intServerName, 0) + "<br/>";
                    int intServer = Int32.Parse(drAnswer["id"].ToString());
                    Zeus oZeus = new Zeus(intProfile, dsnZeus);
                    DataSet dsZeus = oZeus.GetBuildServer(intServer);
                    if (dsZeus.Tables[0].Rows.Count > 0)
                        strStep1 += "Serial Number: " + dsZeus.Tables[0].Rows[0]["serial"].ToString() + "<br/>";
                    int intDomain = Int32.Parse(drAnswer["domainid"].ToString());
                    Domains oDomain = new Domains(intProfile, dsn);
                    boolMove = (oDomain.Get(intDomain, "move") == "1");
                    if (boolMove == true)
                        strStep1 += "DHCP Address: " + drAnswer["dhcp"].ToString() + "<br/>";
                    int intIPAddress = 0;
                    IPAddresses oIPAddresses = new IPAddresses(0, dsnIP, dsn);
                    if (drAnswer["ipaddressid"].ToString() != "")
                    {
                        intIPAddress = Int32.Parse(drAnswer["ipaddressid"].ToString());
                        lbl1.Text += "Assigned IP Address: " + oIPAddresses.GetName(intIPAddress, 0) + "<br/>";
                    }
                    if (drAnswer["ipaddressid_final"].ToString() != "")
                    {
                        intIPAddress = Int32.Parse(drAnswer["ipaddressid_final"].ToString());
                        lbl1.Text += "Final IP Address: " + oIPAddresses.GetName(intIPAddress, 0) + "<br/>";
                    }
                    Asset oAsset = new Asset(intProfile, dsnAsset);
                    int intAsset = 0;
                    if (drAnswer["assetid"].ToString() != "")
                        intAsset = Int32.Parse(drAnswer["assetid"].ToString());
                    if (intAsset > 0)
                    {
                        DataSet dsAsset = oAsset.GetServerOrBlade(intAsset);
                        if (dsAsset.Tables[0].Rows.Count > 0)
                        {
                            strStep1 += "Room: " + dsAsset.Tables[0].Rows[0]["room"].ToString() + "<br/>";
                            strStep1 += "Rack: " + dsAsset.Tables[0].Rows[0]["rack"].ToString() + "<br/>";
                            strStep1 += "ILO: " + "<a href=\"https://" + dsAsset.Tables[0].Rows[0]["ilo"].ToString() + "\" target=\"_blank\">" + dsAsset.Tables[0].Rows[0]["ilo"].ToString() + "</a><br/>";
                        }
                    }
                    int intCluster2 = Int32.Parse(drAnswer["clusterid"].ToString());
                    int intCSMConfig2 = Int32.Parse(drAnswer["csmconfigid"].ToString());
                    int intNumber2 = Int32.Parse(drAnswer["number"].ToString());
                    strStep1 += GetStorage(intAnswer, intCluster2, intCSMConfig2, intNumber2, intModel);
                }
            }
            else if (intStep == 1)
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div1');\">Execute Request</a><b/></td>";
                strExecution += "</tr>";
            }
            strExecution += "<tr id=\"div1\" style=\"display:none\">";
            strExecution += "<td nowrap></td>";
            strExecution += "<td width=\"100%\">";
            strExecution += "<ul>";
            strExecution += "<li>Execute the build</li>";
            strExecution += "<li>Validate that the build finished correctly</li>";
            int intBackup = Int32.Parse(oForecast.GetAnswer(intAnswer, "backup"));
            DataSet dsBackup = oOnDemandTasks.GetServerBackup(intAnswer);
            if (dsBackup.Tables[0].Rows.Count > 0)
            {
                int intRequestB = Int32.Parse(dsBackup.Tables[0].Rows[0]["requestid"].ToString());
                int intItemB = Int32.Parse(dsBackup.Tables[0].Rows[0]["itemid"].ToString());
                int intNumberB = Int32.Parse(dsBackup.Tables[0].Rows[0]["number"].ToString());
                int intUserB = Int32.Parse(oResourceRequest.Get(intRequestB, intItemB, intNumberB, "userid"));
                if (intUserB > 0)
                    strExecution += "<li>TSM Registration form has been assigned for TEST and / or PRODUCTION [Technician: " + oUser.GetFullName(intUserB) + " | Status: " + (dsBackup.Tables[0].Rows[0]["chk1"].ToString() == "1" ? "Complete" : "Incomplete") + "] - you will be notified when it is completed</li>";
                else
                    strExecution += "<li>TSM Registration form has been requested for TEST and / or PRODUCTION and is pending assignment - you will be notified when it is completed</li>";
            }
            else
                strExecution += "<li>TSM Registration form was not submitted for TEST and / or PRODUCTION [" + (intBackup == 1 ? "Client <b>DID</b> Request a Backup" : "Client <b>DID NOT</b> Request a Backup") + "]</li>";
            if (oModelsProperties.IsTypeVMware(intModel) == false)
            {
                int intStorage = Int32.Parse(oForecast.GetAnswer(intAnswer, "storage"));
                DataSet dsStorageT = oOnDemandTasks.GetServerStorage(intAnswer, 0);
                if (dsStorageT.Tables[0].Rows.Count > 0)
                {
                    int intRequestST = Int32.Parse(dsStorageT.Tables[0].Rows[0]["requestid"].ToString());
                    int intItemST = Int32.Parse(dsStorageT.Tables[0].Rows[0]["itemid"].ToString());
                    int intNumberST = Int32.Parse(dsStorageT.Tables[0].Rows[0]["number"].ToString());
                    int intUserST = Int32.Parse(oResourceRequest.Get(intRequestST, intItemST, intNumberST, "userid"));
                    if (intUserST > 0)
                        strExecution += "<li>SAN Registration form has been assigned for TEST [Technician: " + oUser.GetFullName(intUserST) + " | Status: " + (dsStorageT.Tables[0].Rows[0]["chk1"].ToString() == "1" ? "Complete" : "Incomplete") + "] - you will be notified when it is completed</li>";
                    else
                        strExecution += "<li>SAN Registration form has been requested for TEST and is pending assignment - you will be notified when it is completed</li>";
                }
                else
                    strExecution += "<li>SAN Registration form was not submitted for TEST [" + (intStorage == 1 ? "Client <b>DID</b> Request TEST Storage" : "Client <b>DID NOT</b> Request TEST Storage") + "]</li>";
                DataSet dsStorageP = oOnDemandTasks.GetServerStorage(intAnswer, 1);
                if (dsStorageP.Tables[0].Rows.Count > 0)
                {
                    int intRequestSP = Int32.Parse(dsStorageP.Tables[0].Rows[0]["requestid"].ToString());
                    int intItemSP = Int32.Parse(dsStorageP.Tables[0].Rows[0]["itemid"].ToString());
                    int intNumberSP = Int32.Parse(dsStorageP.Tables[0].Rows[0]["number"].ToString());
                    int intUserSP = Int32.Parse(oResourceRequest.Get(intRequestSP, intItemSP, intNumberSP, "userid"));
                    if (intUserSP > 0)
                        strExecution += "<li>SAN Registration form has been assigned for PRODUCTION [Technician: " + oUser.GetFullName(intUserSP) + " | Status: " + (dsStorageP.Tables[0].Rows[0]["chk1"].ToString() == "1" ? "Complete" : "Incomplete") + "] - you will be notified when it is completed</li>";
                    else
                        strExecution += "<li>SAN Registration form has been requested for PRODUCTION and is pending assignment - you will be notified when it is completed</li>";
                }
                else
                    strExecution += "<li>SAN Registration form was not submitted for PRODUCTION [" + (intStorage == 1 ? "Client <b>DID</b> Request PRODUCTION Storage" : "Client <b>DID NOT</b> Request PRODUCTION Storage") + "]</li>";
            }
            else
            {
                strExecution += "<li>SAN Registration form was not submitted for TEST [VMware does not require additional SAN Configuration]</li>";
                strExecution += "<li>SAN Registration form was not submitted for PRODUCTION [VMware does not require additional SAN Configuration]</li>";
            }
            strExecution += "<li>Update Service Center Request</li>";
            strExecution += "</ul>";
            strExecution += "</td>";
            strExecution += "</tr>";
            strExecution += "<tr>";
            strExecution += "<td nowrap></td>";
            strExecution += "<td width=\"100%\">" + strStep1 + "</td>";
            strExecution += "</tr>";
            if (boolMove == true)
            {
                // Step 2: Reserve Ecom / Offshore Assets
                if (intStep > 2)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div2');\">Reserve Ecom / Offshore Assets</a></td>";
                    strExecution += "</tr>";
                }
                else if (intStep == 2)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div2');\">Reserve Ecom / Offshore Assets</a><b/></td>";
                    strExecution += "</tr>";
                }
                else
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div2');\">Reserve Ecom / Offshore Assets</a></td>";
                    strExecution += "</tr>";
                }
                strExecution += "<tr id=\"div2\" style=\"display:none\">";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\">";
                strExecution += "<ul>";
                strExecution += "<li>Talk to an inventory manager about reserving an e-commerce / offshore asset</li>";
                strExecution += "<li>When the assets have been assigned, click <b>Save</b> to continue</li>";
                strExecution += "</ul>";
                strExecution += "</td>";
                strExecution += "</tr>";
                // Step 3: Move to Ecom / Offshore
                if (intStep > 3)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div3');\">Move to Ecom / Offshore</a></td>";
                    strExecution += "</tr>";
                }
                else if (intStep == 3)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div3');\">Move to Ecom / Offshore</a><b/></td>";
                    strExecution += "</tr>";
                }
                else
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div3');\">Move to Ecom / Offshore</a></td>";
                    strExecution += "</tr>";
                }
                strExecution += "<tr id=\"div3\" style=\"display:none\">";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\">";
                strExecution += "<ul>";
                strExecution += "<li>Physically move the server to e-commerce / offshore environment</li>";
                strExecution += "</ul>";
                strExecution += "</td>";
                strExecution += "</tr>";
            }
            else if (intStep == 2)
            {
                oOnDemandTasks.UpdateIIStep(intRequest, intItem, intNumber, intStep + 2);
                Response.Redirect(Request.Path + "?rrid=" + lblRequest.Text + "&div=E&save=true");
            }
            // Step 4: Post-Build Tasks
            if (intStep > 4)
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div4');\">Perform Post-Build Tasks</a></td>";
                strExecution += "</tr>";
            }
            else if (intStep == 4)
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div4');\">Perform Post-Build Tasks</a><b/></td>";
                strExecution += "</tr>";
            }
            else
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div4');\">Perform Post-Build Tasks</a></td>";
                strExecution += "</tr>";
            }
            strExecution += "<tr id=\"div4\" style=\"display:none\">";
            strExecution += "<td nowrap></td>";
            strExecution += "<td width=\"100%\">";
            strExecution += "<ul>";
            strExecution += "<li>Configure CSM</li>";
            strExecution += "<li>Configure Storage and Clustering</li>";
            strExecution += "<li>Install Applications</li>";
            strExecution += "</ul>";
            strExecution += "</td>";
            strExecution += "</tr>";
            if (boolProduction == true)
            {
                // Step 5: Reserve Production
                string strStep5 = "";
                if (intStep > 5)
                {
                    txtProduction.Enabled = false;
                    imgProduction.Enabled = false;
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div5');\">Reserve Production Assets</a></td>";
                    strExecution += "</tr>";
                    DataSet dsAssets = oServer.GetAssets(intAnswer, intClass, intEnv);
                    foreach (DataRow drAsset in dsAssets.Tables[0].Rows)
                    {
                        if (strStep5 != "")
                            strStep5 += "<br/>";
                        int intServerName = Int32.Parse(drAsset["nameid"].ToString());
                        ServerName oServerName = new ServerName(0, dsn);
                        Asset oAsset = new Asset(intProfile, dsnAsset);
                        int intAsset = 0;
                        if (drAsset["assetid"].ToString() != "")
                            intAsset = Int32.Parse(drAsset["assetid"].ToString());
                        if (intAsset > 0)
                        {
                            DataSet dsAsset = oAsset.GetServerOrBlade(intAsset);
                            if (dsAsset.Tables[0].Rows.Count > 0)
                            {
                                strStep5 += "Server Name: " + oservername.getname2(intServerName, 0) + "<br/>";
                                strStep5 += "Serial Number: " + dsAsset.Tables[0].Rows[0]["serial"].ToString() + "<br/>";
                                int intEnclosure = Int32.Parse(dsAsset.Tables[0].Rows[0]["enclosureid"].ToString());
                                // Enclosure name
                                strStep5 += "Enclosure: " + oAsset.GetEnclosure(intEnclosure, "name") + "<br/>";
                                strStep5 += "Bay #: " + dsAsset.Tables[0].Rows[0]["slot"].ToString() + "<br/>";
                                strStep5 += "Room: " + oAsset.GetEnclosure(intEnclosure, "room") + "<br/>";
                                strStep5 += "Rack: " + oAsset.GetEnclosure(intEnclosure, "rack") + "<br/>";
                                strStep5 += "ILO: " + "<a href=\"https://" + dsAsset.Tables[0].Rows[0]["ilo"].ToString() + "\" target=\"_blank\">" + dsAsset.Tables[0].Rows[0]["ilo"].ToString() + "</a><br/>";
                            }
                        }
                        int intCluster2 = Int32.Parse(drAsset["clusterid"].ToString());
                        int intCSMConfig2 = Int32.Parse(drAsset["csmconfigid"].ToString());
                        int intNumber2 = Int32.Parse(drAsset["number"].ToString());
                        strStep5 += GetStorage(intAnswer, intCluster2, intCSMConfig2, intNumber2, intModel);
                    }
                }
                else if (intStep == 5)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div5');\">Reserve Production Assets</a><b/></td>";
                    strExecution += "</tr>";
                }
                else
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div5');\">Reserve Production Assets</a></td>";
                    strExecution += "</tr>";
                }
                strExecution += "<tr id=\"div5\" style=\"display:none\">";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\">";
                strExecution += "<ul>";
                strExecution += "<li>Reserving Production Assets DOES NOT generate the production SAN form (only updating the production go live date)</li>";
                strExecution += "<li>If there is a problem reserving an asset, all reserved assets will be released until the problem is fixed</li>";
                strExecution += "<li>Disaster Recovery Assets will also be reserved (if applicable)</li>";
                strExecution += "<li>All you need to do is click the <b>Save</b> button while on this step to reserve the assets</li>";
                strExecution += "</ul>";
                strExecution += "</td>";
                strExecution += "</tr>";
                if (strStep5 == "")
                    strStep5 = "<img src=\"/images/alert.gif\" border=\"0\" align=\"absmiddle\"/> There are no assets assigned to this design";
                strExecution += "<tr>";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\">" + strStep5 + "</td>";
                strExecution += "</tr>";
                // Step 6: Move to Production
                if (intStep > 6)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div6');\">Move to Production</a></td>";
                    strExecution += "</tr>";
                }
                else if (intStep == 6)
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                    strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div6');\">Move to Production</a><b/></td>";
                    strExecution += "</tr>";
                }
                else
                {
                    strExecution += "<tr>";
                    strExecution += "<td nowrap></td>";
                    strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div6');\">Move to Production</a></td>";
                    strExecution += "</tr>";
                }
                strExecution += "<tr id=\"div6\" style=\"display:none\">";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\">";
                strExecution += "<ul>";
                strExecution += "<li>Physically move the server into production on the production go live date</li>";
                strExecution += "<li>Build assets will NOT be reclaimed at this point</li>";
                strExecution += "</ul>";
                strExecution += "</td>";
                strExecution += "</tr>";
            }
            else if (intStep == 5)
            {
                oOnDemandTasks.UpdateIIStep(intRequest, intItem, intNumber, intStep + 2);
                Response.Redirect(Request.Path + "?rrid=" + lblRequest.Text + "&div=E&save=true");
            }
            // Step 7: Complete the Request
            if (intStep > 7)
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap><img src=\"/images/check.gif\" border=\"0\"/></td>";
                strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div7');\">Complete Request</a></td>";
                strExecution += "</tr>";
            }
            else if (intStep == 7)
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap><img src=\"/images/green_arrow.gif\" border=\"0\"/></td>";
                strExecution += "<td width=\"100%\"><b><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div7');\">Complete Request</a><b/></td>";
                strExecution += "</tr>";
            }
            else
            {
                strExecution += "<tr>";
                strExecution += "<td nowrap></td>";
                strExecution += "<td width=\"100%\"><a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('div7');\">Complete Request</a></td>";
                strExecution += "</tr>";
            }
            strExecution += "<tr id=\"div7\" style=\"display:none\">";
            strExecution += "<td nowrap></td>";
            strExecution += "<td width=\"100%\">";
            strExecution += "<ul>";
            strExecution += "<li>Reclaim Build assets</li>";
            strExecution += "<li>Completes the design</li>";
            strExecution += "<li>Remember to send a birth certificate to the Integration Engineer</li>";
            strExecution += "</ul>";
            strExecution += "</td>";
            strExecution += "</tr>";

            if (intStep == 999)
                boolDone = true;
        }
        else
            strDetails = "<img src=\"/images/bigAlert.gif\" border=\"0\" align=\"absmiddle\"/> Please contact your clearview administrator referencing RESOURCEID <b>" + _request.ToString() + "</b>";
        if (Request.QueryString["div"] != null)
        {
            switch (Request.QueryString["div"])
            {
                case "E":
                    boolExecution = true;
                    break;
            }
        }
        if (boolDetails == false && boolExecution == false)
            boolDetails = true;
        return boolDone;
    }
    private string GetStorage(int intAnswer, int intCluster2, int intCSMConfig2, int intNumber2, int intModel)
    {
        DataSet dsLuns = oStorage.GetLuns(intAnswer, 0, intCluster2, intCSMConfig2, intNumber2);
        string strStorage = "";
        int intRow = 0;
        foreach (DataRow drLun in dsLuns.Tables[0].Rows)
        {
            intRow++;
            strStorage += "<tr>";
            strStorage += "<td>" + intRow.ToString() + "</td>";
            string strLetter = drLun["letter"].ToString();
            if (strLetter == "")
            {
                if (drLun["driveid"].ToString() == "-1000")
                    strLetter = "E";
                else if (drLun["driveid"].ToString() == "-100")
                    strLetter = "F";
                else if (drLun["driveid"].ToString() == "-10")
                    strLetter = "P";
                else if (drLun["driveid"].ToString() == "-1")
                    strLetter = "Q";
            }
            if ((boolOverride == true && drLun["driveid"].ToString() == "0") || oForecast.IsOSMidrange(intAnswer) == true)
                strStorage += "<td>" + drLun["path"].ToString() + "</td>";
            else
                strStorage += "<td>" + strLetter + ":" + drLun["path"].ToString() + "</td>";
            strStorage += "<td>" + drLun["performance"].ToString() + "</td>";
            strStorage += "<td>" + drLun["size"].ToString() + " GB</td>";
            strStorage += "<td class=\"required\">" + (drLun["actual_size"].ToString() == "-1" ? "Pending" : drLun["actual_size"].ToString() + " GB") + "</td>";
            strStorage += "<td>" + drLun["size_qa"].ToString() + " GB</td>";
            strStorage += "<td class=\"required\">" + (drLun["actual_size_qa"].ToString() == "-1" ? "Pending" : drLun["actual_size_qa"].ToString() + " GB") + "</td>";
            strStorage += "<td>" + drLun["size_test"].ToString() + " GB</td>";
            strStorage += "<td class=\"required\">" + (drLun["actual_size_test"].ToString() == "-1" ? "Pending" : drLun["actual_size_test"].ToString() + " GB") + "</td>";
            strStorage += "<td>" + (drLun["replicated"].ToString() == "0" ? "No" : "Yes") + "</td>";
            strStorage += "<td class=\"required\">" + (drLun["actual_replicated"].ToString() == "-1" ? "Pending" : (drLun["actual_replicated"].ToString() == "0" ? "No" : "Yes")) + "</td>";
            strStorage += "<td>" + (drLun["high_availability"].ToString() == "0" ? "No" : "Yes (" + drLun["size"].ToString() + " GB)") + "</td>";
            strStorage += "<td class=\"required\">" + (drLun["actual_high_availability"].ToString() == "-1" ? "Pending" : (drLun["actual_high_availability"].ToString() == "0" ? "No" : "Yes (" + drLun["actual_size"].ToString() + " GB)")) + "</td>";
            strStorage += "</tr>";
            DataSet dsPoints = oStorage.GetMountPoints(Int32.Parse(drLun["id"].ToString()));
            int intPoint = 0;
            foreach (DataRow drPoint in dsPoints.Tables[0].Rows)
            {
                intRow++;
                intPoint++;
                strStorage += "<tr>";
                strStorage += "<td>" + intRow.ToString() + "</td>";
                if (oForecast.IsOSMidrange(intAnswer) == true)
                    strStorage += "<td>" + drPoint["path"].ToString() + "</td>";
                else
                    strStorage += "<td>" + strLetter + ":\\SH" + drLun["driveid"].ToString() + "VOL" + (intPoint < 10 ? "0" : "") + intPoint.ToString() + "</td>";
                strStorage += "<td>" + drPoint["performance"].ToString() + "</td>";
                strStorage += "<td>" + drPoint["size"].ToString() + " GB</td>";
                strStorage += "<td class=\"required\">" + (drPoint["actual_size"].ToString() == "-1" ? "Pending" : drPoint["actual_size"].ToString() + " GB") + "</td>";
                strStorage += "<td>" + drPoint["size_qa"].ToString() + " GB</td>";
                strStorage += "<td class=\"required\">" + (drPoint["actual_size_qa"].ToString() == "-1" ? "Pending" : drPoint["actual_size_qa"].ToString() + " GB") + "</td>";
                strStorage += "<td>" + drPoint["size_test"].ToString() + " GB</td>";
                strStorage += "<td class=\"required\">" + (drPoint["actual_size_test"].ToString() == "-1" ? "Pending" : drPoint["actual_size_test"].ToString() + " GB") + "</td>";
                strStorage += "<td>" + (drPoint["replicated"].ToString() == "0" ? "No" : "Yes") + "</td>";
                strStorage += "<td class=\"required\">" + (drPoint["actual_replicated"].ToString() == "-1" ? "Pending" : (drPoint["actual_replicated"].ToString() == "0" ? "No" : "Yes")) + "</td>";
                strStorage += "<td>" + (drPoint["high_availability"].ToString() == "0" ? "No" : "Yes (" + drPoint["size"].ToString() + " GB)") + "</td>";
                strStorage += "<td class=\"required\">" + (drPoint["actual_high_availability"].ToString() == "-1" ? "Pending" : (drPoint["actual_high_availability"].ToString() == "0" ? "No" : "Yes (" + drPoint["actual_size"].ToString() + " GB)")) + "</td>";
                strStorage += "</tr>";
            }
        }
        if (strStorage != "")
        {
            strStorage = "<tr class=\"bold\"><td></td><td>Path</td><td>Performance</td><td>Requested<br/>Size in Prod</td><td>Actual<br/>Size in Prod</td><td>Requested<br/>Size in QA</td><td>Actual<br/>Size in QA</td><td>Requested<br/>Size in Test</td><td>Actual<br/>Size in Test</td><td>Requested<br/>Replication</td><td>Actual<br/>Replication</td><td>Requested<br/>High Availability</td><td>Actual<br/>High Availability</td></tr>" + strStorage;
            strStorage = "<table id=\"tblStorage" + intNumber2.ToString() + "\" style=\"display:none\" width=\"100%\" cellpadding=\"2\" cellspacing=\"1\" border=\"0\">" + strStorage + "</table>";
            strStorage = "<a href=\"javascript:void(0);\" onclick=\"ShowHideDiv2('tblStorage" + intNumber2.ToString() + "');\">Show Storage Settings</a><br/>" + strStorage;
        }
        return strStorage;
    }
    private void btnSave_Click(Object Sender, EventArgs e)
    {
        int intResource = Int32.Parse(lblRequest.Text);
        oResourceRequest.Update(intResource, txtCustom.Text);
        int intStep = Int32.Parse(lblStep.Text);
        int intAnswer = Int32.Parse(lblAnswer.Text);
        if (txtProduction.Enabled == true)
        {
            try
            {
                oForecast.UpdateAnswerProduction(intAnswer, DateTime.Parse(txtProduction.Text));
            }
            catch { }
        }
        int intClass = Int32.Parse(oForecast.GetAnswer(intAnswer, "classid"));
        int intEnv = Int32.Parse(oForecast.GetAnswer(intAnswer, "environmentid"));
        int intAddress = Int32.Parse(oForecast.GetAnswer(intAnswer, "addressid"));
        Variables oVariable = new Variables(intEnvironment);
        Asset oAsset = new Asset(intProfile, dsnAsset);
        switch (intStep)
        {
            case 5:
                oFunction.SendEmail("!!! Reserving Production Assets !!!", oVariable.BCC(), "", "", "!!! Reserving Production Assets !!!", "<p>The Production assets for ANSWERID " + intAnswer.ToString() + " (PHYSICAL)</p>", true, false);
                oOnDemandTasks.UpdatePhysicalIIProd(intRequest, intItem, intNumber);
                ServerName oServerName = new ServerName(intProfile, dsn);
                DataSet dsAnswer = oServer.GetAnswer(intAnswer);
                foreach (DataRow drAnswer in dsAnswer.Tables[0].Rows)
                {
                    int intServer = Int32.Parse(drAnswer["id"].ToString());
                    int intName = Int32.Parse(drAnswer["nameid"].ToString());
                    string strName = oservername.getname2(intName, 0);
                    int intModel = Int32.Parse(drAnswer["modelid"].ToString());
                    int intAsset = oAsset.GetServerOrBladeAvailable(intClass, intEnv, intAddress, intModel, intAnswer, dsn, strHA, false);
                    if (intAsset > 0)
                    {
                        oAsset.AddStatus(intAsset, strName, (int)AssetStatus.InUse, intProfile, DateTime.Now);
                        oServer.AddAsset(intServer, intAsset, intClass, intEnv, 0, 0);
                        if (drAnswer["dr"].ToString() == "1" && drAnswer["dr_exist"].ToString() != "1")
                        {
                            DataSet dsAssets = oAsset.GetServerOrBladeAvailableDR(intEnv, intModel, 0);
                            if (dsAssets.Tables[0].Rows.Count > 0)
                            {
                                int intAssetDR = Int32.Parse(dsAssets.Tables[0].Rows[0]["id"].ToString());
                                oAsset.AddStatus(intAssetDR, strName + "-DR", (int)AssetStatus.InUse, intProfile, DateTime.Now);
                                oServer.AddAsset(intServer, intAssetDR, intClass, intEnv, 0, 1);
                            }
                            else
                                oFunction.SendEmail("!!! ERROR: Reserving DR Assets !!!", oVariable.BCC(), "", "", "!!! ERROR: Reserving DR Assets !!!", "<p>The DR assets for ANSWERID " + intAnswer.ToString() + " (PHYSICAL) were not reserved<p>", true, false);
                        }
                    }
                    else
                        oFunction.SendEmail("!!! ERROR: Reserving Production Assets !!!", oVariable.BCC(), "", "", "!!! ERROR: Reserving Production Assets !!!", "<p>The production assets for ANSWERID " + intAnswer.ToString() + " (PHYSICAL) were not reserved<p>", true, false);
                }
                break;
            case 7:
                if (lblProduction.Text == "1")
                {
                    oFunction.SendEmail("!!! Releasing Build Assets !!!", oVariable.BCC(), "", "", "!!! Releasing Build Assets !!!", "The build assets for ANSWERID " + intAnswer.ToString() + " (PHYSICAL)", true, false);
                    DataSet dsAssets = oServer.GetAssetsNot(intAnswer, intClass, intEnv);
                    foreach (DataRow drAsset in dsAssets.Tables[0].Rows)
                    {
                        int intServer = Int32.Parse(drAsset["id"].ToString());
                        int intAsset = Int32.Parse(drAsset["assetid"].ToString());
                        oAsset.AddStatus(intAsset, "", (int)AssetStatus.InStock, intProfile, DateTime.Now);
                        //oServer.DeleteAsset(intServer, intAsset);
                        DataSet dsIP = oServer.GetIP(intServer);
                        foreach (DataRow drIP in dsIP.Tables[0].Rows)
                            oServer.DeleteIP(intServer, Int32.Parse(drIP["ipaddressid"].ToString()));
                    }
                }
                break;
        }
        double dblStep = double.Parse(lblStep.Text);
        double dblDivide = dblStep / dblSteps;
        double dblHours = dblDivide * dblTotalHours;
        double dblUsed = oResourceRequest.GetUsed(intResource);
        dblHours = (dblHours - dblUsed);
        if (dblHours > 0.00)
            oResourceRequest.UpdateHours(intResource, dblHours);
        oOnDemandTasks.UpdateIIStep(intRequest, intItem, intNumber, intStep + 1);
        if (intStep == Int32.Parse(dblSteps.ToString("0")))
            oOnDemandTasks.UpdateIIStep(intRequest, intItem, intNumber, 999);
        Response.Redirect(Request.Path + "?rrid=" + lblRequest.Text + "&div=E&save=true");
    }
    private void btnComplete_Click(Object Sender, EventArgs e)
    {
        int intResource = Int32.Parse(lblRequest.Text);
        oResourceRequest.UpdateStatus(intResource, 3);
        oOnDemandTasks.AddSuccess(intResource, "Physical", Int32.Parse(ddlSuccess.SelectedItem.Value), txtComments.Text);
        oOnDemandTasks.UpdateIIComplete(intRequest, intItem, intNumber);
        oResourceRequest.Close(intResource, intEnvironment, strBCC, 0, dsnServiceEditor);
        oRequest.Close(intRequest, intEnvironment, strBCC);
        Page.ClientScript.RegisterClientScriptBlock(typeof(Page), "reload", "<script type=\"text/javascript\">RefreshOpeningWindow();window.close();<" + "/" + "script>");
    }
</script>
<script type="text/javascript">
    function ChangeFrame(oCell, oShow, oHide1, oHidden, strHidden) {
        oShow = document.getElementById(oShow);
        oShow.style.display = "inline";
        oHide1 = document.getElementById(oHide1);
        oHide1.style.display = "none";
    	var oRow = oCell.parentElement;
	    for (var yy=0; yy<oRow.children.length; yy++) {
    		var oNot = oRow.getElementsByTagName("td").item(yy);
    		if (oNot.className == "cmbutton")
                oNot.style.border = "1px solid #94a6b5"
    	}
	    oCell.style.borderTop = "3px solid #6A8359"
        oCell.style.borderBottom = "1px solid #FFFFFF"
        oHidden = document.getElementById(oHidden);
        oHidden.value = strHidden;
    }
</script>
<asp:Panel ID="panWorkload" runat="server" Visible="false">
    <table width="100%" border="0" cellSpacing="0" cellPadding="0" class="default">
        <tr>
            <td>
                <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                    <tr>
                        <td><asp:ImageButton ID="btnSave" runat="server" ImageAlign="AbsMiddle" ImageUrl="/images/tool_save.gif" OnClick="btnSave_Click" /></td>
                        <td><asp:ImageButton ID="btnPrint" runat="server" ImageAlign="AbsMiddle" ImageUrl="/images/tool_print.gif" /></td>
                        <td><asp:ImageButton ID="btnComplete" runat="server" ImageAlign="AbsMiddle" ImageUrl="/images/tool_complete.gif" OnClick="btnComplete_Click" /></td>
                        <td width="100%">
                            <table width="100%" cellpadding="0" cellspacing="0" border="0">
                                <tr>
                                    <td><img src="/images/tool_left.gif" border="0" width="6" height="26"></td>
                                    <td nowrap background="/images/tool_back.gif" width="100%"><img src="/images/tool_back.gif" border="0" width="2" height="26"></td>
                                    <td><img src="/images/tool_right.gif" border="0" width="6" height="26"></td>
                                </tr>
                            </table>
                        </td>
                        <td><asp:ImageButton ID="btnClose" runat="server" ImageAlign="AbsMiddle" ImageUrl="/images/tool_close.gif" /></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td class="default">
                <table width="100%" border="0" cellSpacing="2" cellPadding="2" class="default">
                    <tr>
                        <td valign="top">
                            <table border="0" cellpadding="3" cellspacing="2">
                                <tr>
                                    <td nowrap><b>Name:</b></td>
                                    <td><asp:Label ID="lblName" runat="server" CssClass="default" /></td>
                                </tr>
                                <tr>
                                    <td nowrap><b>Number:</b></td>
                                    <td><asp:Label ID="lblNumber" runat="server" CssClass="default" /></td>
                                </tr>
                                <tr>
                                    <td nowrap><b>Type:</b></td>
                                    <td><asp:Label ID="lblType" runat="server" CssClass="default" /></td>
                                </tr>
                                <tr>
                                    <td nowrap><b>Service:</b></td>
                                    <td><asp:Label ID="lblService" runat="server" CssClass="default" /></td>
                                </tr>
                                <tr>
                                    <td nowrap><b>Last Updated:</b></td>
                                    <td><asp:Label ID="lblUpdated" runat="server" CssClass="default" /></td>
                                </tr>
                                <tr>
                                    <td nowrap><b>Nickname:</b></td>
                                    <td><asp:TextBox ID="txtCustom" runat="server" CssClass="default" Width="300" MaxLength="100" /></td>
                                </tr>
                            </table>
                        </td>
                        <td valign="top" align="right"><iframe src="/frame/did_you_know.aspx" frameborder="0" scrolling="no" width="300" height="125"></iframe></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr height="16">
            <td><img src="/images/spacer.gif" border="0" height="16" width="1" /></td>
        </tr>
        <tr>
            <td>
                    <table width="100%" height="100%" border="0" cellSpacing="0" cellPadding="0" class="default">
                        <tr>
                            <td class="cmbutton" style='<%=boolDetails == true ? "display:inline;border-bottom:1px solid #FFFFFF;border-top:3px solid orange;" : "" %>' onclick="ChangeFrame(this,'divDetails','divExecution','<%=hdnTab.ClientID %>','D');">Request Details</td>
                            <td class="cmbuttonspace">&nbsp;</td>
                            <td class="cmbutton" style='<%=boolExecution == true ? "display:inline;border-bottom:1px solid #FFFFFF;border-top:3px solid orange;" : "" %>' onclick="ChangeFrame(this,'divExecution','divDetails','<%=hdnTab.ClientID %>','E');">Execution</td>
                        </tr>
                        <tr>
                            <td colspan="3" align="center" class="cmcontents">
                                <table width="100%" height="100%" border="0" cellSpacing="2" cellPadding="2" class="default">
                                    <tr> 
                                        <td valign="top">
		                                    <div id="divDetails" style='<%=boolDetails == true ? "display:inline" : "display:none" %>'>
		                                        <br />
                                                <table width="100%" cellpadding="4" cellspacing="3" border="0">
                                                    <%=strDetails %>
                                                    <tr>
                                                        <td class="greentableheader">Request Details</td>
                                                    </tr>
                                                    <tr>
                                                        <td><asp:Label ID="lblView" runat="server" CssClass="default" /></td>
                                                    </tr>
                                                </table>
                                                <p>&nbsp;</p>
		                                    </div>
		                                    <div id="divExecution" style='<%=boolExecution == true ? "display:inline" : "display:none" %>'>
		                                        <br />
                                                <table width="100%" cellpadding="4" cellspacing="3" border="0" style="border:solid 1px #999999" bgcolor="#f9f9f9">
                                                    <tr>
                                                        <td colspan="2"><img src="/images/alert.gif" border="0" align="absmiddle" /> <b>PLEASE READ:</b> This workflow has changed. Everytime you click Save, you will move to the next step. Please be careful not to click Save unless you are ready to perform the next step.</td>
                                                    </tr>
                                                </table>
                                                <br />
                                                <asp:Panel ID="panProduction" runat="server" Visible="false">
                                                <table width="100%" cellpadding="4" cellspacing="3" border="0">
                                                    <tr>
                                                        <td colspan="2">Production Go Live Date: <asp:TextBox ID="txtProduction" runat="server" CssClass="default" Width="100" MaxLength="10" /> <asp:ImageButton ID="imgProduction" runat="server" ImageAlign="AbsMiddle" ImageUrl="/images/calendar.gif" /></td>
                                                    </tr>
                                                </table>
                                                <br />
                                                </asp:Panel>
                                                <table width="100%" cellpadding="4" cellspacing="3" border="0" class="workflow">
    		                                        <%=strExecution %>
                                                </table>
                                                <br />
                                                <table cellpadding="4" cellspacing="3" border="0" style="border:solid 1px #999999" bgcolor="#f9f9f9">
                                                    <tr>
                                                        <td nowrap><asp:Image ID="imgSuccess" runat="server" ImageAlign="absMiddle" ImageUrl="/images/spacer.gif" /></td>
                                                        <td width="100%" class="bold">Auto-Provisioning Survey</td>
                                                    </tr>
                                                    <tr>
                                                        <td nowrap></td>
                                                        <td width="100%">
                                                            <table cellpadding="2" cellspacing="2" border="0">
                                                                <tr>
                                                                    <td>Did the auto-provisioning tool work?</td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        <asp:DropDownList ID="ddlSuccess" runat="server" CssClass="default">
                                                                            <asp:ListItem Value="-- SELECT --" />
                                                                            <asp:ListItem Value="1" Text="Yes (no problems)" />
                                                                            <asp:ListItem Value="0" Text="Yes (minor problems)" />
                                                                            <asp:ListItem Value="-1" Text="Yes (major problems)" />
                                                                            <asp:ListItem Value="-2" Text="No (could not complete)" />
                                                                        </asp:DropDownList>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td valign="top">If there were problems, please explain:</td>
                                                                </tr>
                                                                <tr>
                                                                    <td><asp:TextBox ID="txtComments" runat="server" CssClass="default" Width="600" Rows="12" TextMode="multiline" /></td>
                                                                </tr>
                                                            </table>
                                                        </td>
                                                    </tr>
                                                </table>
		                                    </div>
		                                </td>
		                            </tr>
		                        </table>
		                    </td>
	                    </tr>
	                </table>
            </td>
        </tr>
    </table>
</asp:Panel>
<asp:Panel ID="panDenied" runat="server" Visible="false">
    <table width="100%" cellpadding="2" cellspacing="2" border="0">
        <tr>
            <td><img src="/images/spacer.gif" border="0" width="15" height="1" /></td>
            <td class="header"><img src="/images/bigX.gif" border="0" align="absmiddle" /> Access Denied</td>
        </tr>
        <tr><td colspan="2">&nbsp;</td></tr>
        <tr>
            <td><img src="/images/spacer.gif" border="0" width="15" height="1" /></td>
            <td>You do not have rights to view this item.</td>
        </tr>
        <tr><td colspan="2">&nbsp;</td></tr>
        <tr>
            <td colspan="2"><hr size="1" noshade /></td>
        </tr>
        <tr>
            <td colspan="2" align="right">
                <table width="100%" cellpadding="0" cellspacing="0" border="0">
                    <tr>
                        <td class="footer"></td>
                        <td align="right"><asp:Button ID="btnDenied" runat="server" CssClass="default" Width="75" Text="Close" /></td>
                    </tr>
                </table>
            </td>
        </tr>
    </table>
</asp:Panel>
<asp:Label ID="lblRequest" runat="server" Visible="false" />
<asp:Label ID="lblStep" runat="server" Visible="false" />
<asp:Label ID="lblAnswer" runat="server" Visible="false" />
<asp:Label ID="lblProduction" runat="server" Visible="false" />
<asp:HiddenField ID="hdnTab" runat="server" />